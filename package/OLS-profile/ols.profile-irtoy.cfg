# Configuration for the USB Infrared Toy
# http://dangerousprototypes.com/docs/USB_IR_Toy:_SUMP_logic_analyzer_mode

# The short (single word) type of the device described in this profile
device.type = IRtoy
# A longer description of the device
device.description = USB Infrared Toy OLS mode
# The device interface, SERIAL only
device.interface = SERIAL
# The device's native clockspeed, in Hertz.
device.clockspeed = 4000000
# Whether or not double-data-rate is supported by the device (also known as the "demux"-mode).
device.supports_ddr = false
# Supported sample rates in Hertz, separated by comma's
device.samplerates = 10040
# What capture clocks are supported
device.captureclock = INTERNAL
# The supported capture sizes, in bytes
device.capturesizes = 4096
# Whether or not the noise filter is supported
device.feature.noisefilter = false
# Whether or not Run-Length encoding is supported
device.feature.rle = false
# Whether or not a testing mode is supported
device.feature.testmode = false
# Whether or not triggers are supported
device.feature.triggers = false
# The number of trigger stages
device.trigger.stages = 0
# Whether or not "complex" triggers are supported
device.trigger.complex = false

# The total number of channels usable for capturing
device.channel.count = 8
# The number of channels groups, together with the channel count determines the channels per group
device.channel.groups = 1
# Whether the capture size is limited by the enabled channel groups
device.capturesize.bound = false
# Which numbering does the device support
device.channel.numberingschemes = DEFAULT 

# Is a delay after opening the port and device detection needed? (0 = no delay, >0 = delay in milliseconds)
device.open.portdelay = 500
# Does the device need a high or low DTR-line to operate correctly? (high = true, low = false)
device.open.portdtr = false
# Which metadata keys correspond to this device profile? Value is a comma-separated list of (double quoted) names...
device.metadata.keys = "IRTOY"

# In which order are samples sent back from the device? true = last sample first, false = first sample first
device.samples.reverseOrder = true

###EOF###
